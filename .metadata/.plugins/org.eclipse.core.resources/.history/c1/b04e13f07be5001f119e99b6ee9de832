//package com.aurionpro.test;
//
//import java.util.Scanner;
//import com.aurionpro.model.Account;
//
//public class AccountTest {
//	public static void main(String[] args) {
//		Scanner scanner = new Scanner(System.in);
//		Account account1 = null;
//		
//		while (true) {
//			System.out.println("\n1. Create Savings Account\n2. Create Current Account\n3. View Balance\n4. Credit Amount\n5. Debit Amount\n6. Exit");
//			System.out.print("\nEnter your choice: ");
//			int choice = scanner.nextInt();
//
//			System.out.println();
//
//			switch(choice)
//			{
//				case 1:
//				{
//					if(account1 == null)
//					{
//						account1 = new Account();
//						takeInut(account1, scanner);
//						System.out.println("\nYour Account details are: ");
//						displayDetails(account1);
//					}
//					else
//					{
//						System.out.println("Account alreadyy exists.");
//					}
//					break;
//				}
//				case 2:
//				{
//					
//				}
//				case 3:
//				{
//					if(account1 != null)
//					{
//						System.out.println("Your balance is: "+account1.getBalance());
//					}
//					else
//					{
//						System.out.println("No account found !! Create an account first.");
//					}
//					break;
//				}
//				case 4: 
//				{
//					if(account1 != null)
//					{
//						System.out.print("Enter credit amount: ");
//						double creditAmount = scanner.nextDouble();
//						credit(account1, creditAmount);
//					}	
//					else
//					{
//						System.out.println("No account found !! Create an account first.");
//					}
//					break;
//				}
//				case 5:
//				{
//					if(account1 != null)
//					{
//						System.out.println("Enter debit amount: ");
//						double debitAmount = scanner.nextDouble();
//						debit(account1, debitAmount);
//					}	
//					else
//					{
//						System.out.println("No account found !! Create an account first.");
//					}
//					break;
//				}
//				case 6:
//				{
//					System.out.println("Thanks you !!");
//					return;
//				}
//				default:
//				{
//					System.out.println("Enter a valid choice !!");
//				}
//			}
//		}
//	}
//
//	static {
//		System.out.println("Welome to the Banking Application");
//	}
//	
//	public static void takeInut(Account account, Scanner scanner)
//	{
//		System.out.println("Enter your name: ");
//		scanner.nextLine();
//		account.setName(scanner.nextLine());
//		while(account.getBalance() < 500)
//		{
//			System.out.println("Enter your initial balance (Minimum 500 required): ");
//			account.setBalance(scanner.nextDouble());
//		}
//	}
//	
//	public static void displayDetails(Account account)
//	{
//		System.out.print("Your name: ");
//		System.out.println(account.getName());
//		System.out.print("Your account number: ");
//		System.out.println(account.getAccountNumber());
//		System.out.print("Your balance: ");
//		System.out.println(account.getBalance());
//	}
//	
//	public static void credit(Account account, double amount)
//	{
//		if(amount > 0)
//		{
//			account.setBalance(account.getBalance() + amount);
//			System.out.println("\n"+amount+" credited to the account successfully.");
//		}
//		else
//		{
//			System.out.println("Enter a valid amount.");
//		}
//	}
//	
//	public static void debit(Account account, double amount)
//	{
//		if(amount > 0 && (account.getBalance() - amount) >= Account.getMinimumbalance())
//		{
//			account.setBalance(account.getBalance() - amount);
//			System.out.println("\n"+amount+" debited from the account successfully.");
//		}
//		else if(amount < 0)
//		{
//			System.out.println("Enter a valid amount.");
//		}
//		else
//		{
//			System.out.println("Debit not possible as minimum 500 balance is required.");
//		}
//	}
//}












package com.aurionpro.test;

import java.util.Random;
import java.util.Scanner;
import com.aurionpro.model.*;

public class AccountTest {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        Account account = null;

        while (true) {
            System.out.println("\n1. Create Savings Account\n2. Create Current Account\n3. View Balance\n4. Deposit Amount\n5. Withdraw Amount\n6. Exit");
            System.out.print("\nEnter your choice: ");
            int choice = scanner.nextInt();

            switch (choice) {
                case 1: // Create Savings Account
                    if (account == null) {
                        account = createSavingsAccount(scanner);
                        displayDetails(account);
                    } else {
                        System.out.println("Account already exists!");
                    }
                    break;

                case 2: // Create Current Account
                    if (account == null) {
                        account = createCurrentAccount(scanner);
                        displayDetails(account);
                    } else {
                        System.out.println("Account already exists!");
                    }
                    break;

                case 3: // View Balance
                    if (account != null) {
                        System.out.println("Your balance is: " + account.getBalance());
                    } else {
                        System.out.println("No account found! Create an account first.");
                    }
                    break;

                case 4: // Deposit
                    if (account != null) {
                        System.out.print("Enter deposit amount: ");
                        double depositAmount = scanner.nextDouble();
                        account.deposit(depositAmount);
                    } else {
                        System.out.println("No account found! Create an account first.");
                    }
                    break;

                case 5: // Withdraw
                    if (account != null) {
                        System.out.print("Enter withdraw amount: ");
                        double withdrawAmount = scanner.nextDouble();
                        account.withdraw(withdrawAmount);
                    } else {
                        System.out.println("No account found! Create an account first.");
                    }
                    break;

                case 6: // Exit
                    System.out.println("Thank you for using our Banking System!");
                    return;

                default:
                    System.out.println("Enter a valid choice!");
            }
        }
    }

    static {
        System.out.println("Welcome to the Banking Application");
    }

    // Create Savings Account
    private static SavingsAccount createSavingsAccount(Scanner scanner) {
        System.out.print("Enter your name: ");
        scanner.nextLine(); // Consume newline
        String name = scanner.nextLine();
        System.out.print("Enter initial balance (Minimum 500 required): ");
        double balance = scanner.nextDouble();
        while (balance < 500) {
            System.out.print("Insufficient balance! Enter at least 500: ");
            balance = scanner.nextDouble();
        }
        System.out.print("Enter interest rate: ");
        double interestRate = scanner.nextDouble();
        return new SavingsAccount(generateAccountNumber(), name, balance, interestRate);
    }

    // Create Current Account
    private static CurrentAccount createCurrentAccount(Scanner scanner) {
        System.out.print("Enter your name: ");
        scanner.nextLine(); // Consume newline
        String name = scanner.nextLine();
        System.out.print("Enter initial balance: ");
        double balance = scanner.nextDouble();
        System.out.print("Enter overdraft limit: ");
        double overdraftLimit = scanner.nextDouble();
        return new CurrentAccount(generateAccountNumber(), name, balance, overdraftLimit);
    }

    // Display Account Details
    private static void displayDetails(Account account) {
        System.out.println("\nYour Account Details:");
        System.out.println("Name: " + account.getName());
        System.out.println("Account Number: " + account.getAccountNumber());
        System.out.println("Balance: " + account.getBalance());
    }

    // Generate Random Account Number
    private static int generateAccountNumber() {
        Random random = new Random();
        return 1000 + random.nextInt(9000);
    }
}
